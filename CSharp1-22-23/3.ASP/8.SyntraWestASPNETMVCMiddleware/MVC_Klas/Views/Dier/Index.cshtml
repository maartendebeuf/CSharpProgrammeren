@using MVC_Klas.Controllers;
@using Microsoft.AspNetCore.Mvc.Localization;
@using Microsoft.Extensions.Localization;

@model IEnumerable<MVC_Klas.Models.Dier>
@inject IViewLocalizer Localizer
@inject IHtmlLocalizer<DierController> htmlLocalizer
@inject IStringLocalizer<DierController> stringLocalizer

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

@htmlLocalizer["WelcomeHTML"]
@stringLocalizer["WelcomeHTML"]

<h2>@Localizer["Welcome"]</h2>

<h2>@ViewData["Welcome"]</h2>

<h3>@htmlLocalizer["Test"]</h3>

<p>
    <a asp-action="Create">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Benaming)        @*vb van lijst toevoegen in details in herhaling*@
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Familie)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Gevaarlijk)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Benaming)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Familie.Naam) (@Html.DisplayFor(modelItem => item.Familie.Klasse))
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Gevaarlijk)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { benaming = item.Benaming }) |   @*Uit comment halen en (best ID) meegeven naar nieuwe view*@
                @Html.ActionLink("Details", "Details", new {  benaming = item.Benaming }) |
                @Html.ActionLink("Delete", "Delete", new { benaming = item.Benaming })
            </td>
        </tr>
}
    </tbody>
</table>
